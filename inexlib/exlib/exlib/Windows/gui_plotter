// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file exlib.license for terms.

#ifndef exlib_Windows_gui_plotter
#define exlib_Windows_gui_plotter

#include "gui_viewer"

#include <inlib/sg/noderef>
#include <inlib/sg/ortho>
#include <inlib/sg/plots>

#include <inlib/sg/h2plot_cp>
#include <inlib/sg/f2plot>
#include <inlib/sg/xy2plot>
#include <inlib/sg/fit2plot>
#include <inlib/sg/cloud2plot_cp>

// disable the warning about the usage of "this" in the constructor.
#pragma warning(disable:4355)

namespace exlib {
namespace Windows {

//IMPORTANT : pv_holder must come before gui_viewer.

class gui_plotter : public gui_viewer {
  typedef gui_viewer parent;
public: //exlib::Windows::glarea
  virtual void resize(unsigned int a_w,unsigned int a_h){
    m_plots.adjust_size(a_w,a_h);
    set_size(a_w,a_h);
  }
public:
  gui_plotter(session& a_session,
              unsigned int a_cols = 1,unsigned int a_rows = 1,
              int a_x = 0,int a_y = 0,
              unsigned int a_width = 500,unsigned int a_height = 500,
              const std::string& a_win_title = "")
  :parent(a_session,a_x,a_y,a_width,a_height,a_win_title)
  ,m_plots(parent::pv_holder::ttf())
  {
#include "../sg_common.icc"    
#include "../style_common.icc"    
  }
  virtual ~gui_plotter() {}
protected:
  gui_plotter(const gui_plotter& a_from)
  :parent(a_from)
  ,m_plots(a_from.m_plots)
  {}
  gui_plotter& operator=(const gui_plotter& a_from){
    parent::operator=(a_from);
    m_plots = a_from.m_plots;
    return *this;
  }
public:
#include "../plotter_common.icc"
protected:
  inlib::sg::plots m_plots;
};

}}

//exlib_build_use inlib inlib_glutess freetype
//exlib_build_use png jpeg zlib

//exlib_build_use Windows

#endif
