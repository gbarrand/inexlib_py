// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_box3d
#define inlib_box3d

#include "box3"
#include "vec3d"
#include <cfloat> //DBL_MAX

namespace inlib {

class box3d : public box3<vec3d> {
  typedef box3<vec3d> parent;
  static double num_max() {return DBL_MAX;}
public:
  box3d():parent(){make_empty();}
  virtual ~box3d() {}
public:
  box3d(const box3d& a_from):parent(a_from){}
  box3d& operator=(const box3d& a_from){
    parent::operator=(a_from);
    return *this;
  }
public:
  void make_empty(){
    m_min.set_value( num_max(),  num_max(),  num_max());
    m_max.set_value(-num_max(), -num_max(), -num_max());
  }
  bool get_cube_size(double& a_dx,double& a_dy,double& a_dz) const {
    return parent::get_cube_size(a_dx,a_dy,a_dz,::sqrt);
  }
};

}

#endif
